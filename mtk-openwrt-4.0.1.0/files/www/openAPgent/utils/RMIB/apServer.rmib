'''
This file is REST Management Information Database(RMIB) that...
'''

URI=v1/infos/usages
BASENAME=system_usage
CLASSNAME=SysetmUsage
SAL_FUNCTION=swigc
SAL_IMPORT_FILE=swigc.sys_usage
METHODLIST=list,retrieve

URI=v1/infos/devices
BASENAME=device_info
CLASSNAME=DeviceInfo
SAL_FUNCTION=py
METHODLIST=list

URI=v1/infos/hardwares/interfaces
BASENAME=hardware_interface_info
CLASSNAME=HardwareInterfaceInfo
SAL_FUNCTION=py
METHODLIST=list,retrieve

URI=v1/configs/provisioning-done
BASENAME=provisioning_done
CLASSNAME=ProvisioningDone
SAL_FUNCTION=py
SAL_IMPORT_FILE=python.system
METHODLIST=create

URI=v1/keepalive-check
BASENAME=keepalive_check
CLASSNAME=KeepaliveCheck
SAL_FUNCTION=py
METHODLIST=list

#  v1/configs/system/logging, v1/configs/system/ntp
#     : retrieve,detail_ceate,detail_update
URI=v1/configs/system
BASENAME=system_config
CLASSNAME=SysetmConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=puci.system_config
METHODLIST=list,create,update,retrieve,detail_create,detail_update
FIELD_NAME_system_config=system_config_logging,system_config_ntp

URI=v1/configs/interfaces
BASENAME=interface_config
CLASSNAME=InterfaceConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=puci.interface
METHODLIST=list,create,update,retrieve,detail_create,detail_update
FIELD_NAME_interface=interface_config,interface_v4addr_config

URI=no
BASENAME=interface_v4addr_config
CLASSNAME=InterfaceV4addrConfig
SAL_FUNCTION=puci
METHODLIST=list,create,update

URI=v1/configs/vlans
BASENAME=vlan_config
CLASSNAME=VlanConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=puci.vlan
METHODLIST=list,create,update,retrieve,detail_create,detail_update
FIELD_NAME_vlan=vlan_common_config,vlan_config

URI=v1/configs/dhcp/common
BASENAME=dhcp_common_config
CLASSNAME=DhcpCommonConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=puci.dhcp
METHODLIST=list,create,update
FIELD_NAME_dhcp=dhcp_common,dhcp_interface_pool,dhcp_interface_v6pool,dhcp_static_leases

URI=v1/configs/dhcp/pools
BASENAME=dhcp_pool_config
CLASSNAME=DhcpPoolConfig
SAL_FUNCTION=puci
METHODLIST=list,create,update,retrieve,detail_create,detail_update

URI=v1/configs/dhcp/static-leases
BASENAME=dhcp_static_leases_config
CLASSNAME=DhcpStaticLeasesConfig
SAL_FUNCTION=puci
METHODLIST=list,create,update,retrieve,detail_create,detail_update

URI=v1/configs/snmp
BASENAME=snmp_config
CLASSNAME=SNMPConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=puci.snmp
METHODLIST=list,create,update,retrieve,detail_create,detail_update

URI=v1/configs/wireless
BASENAME=wireless_config
CLASSNAME=WirelessConfig
SAL_FUNCTION=puci
SAL_IMPORT_FILE=python.wireless
METHODLIST=list,create,update,retrieve,detail_create,detail_update

URI=v1/configs/wireless-search
BASENAME=wireless_search
CLASSNAME=WirelessSearch
SAL_FUNCTION=puci
METHODLIST=list

URI=v1/management/firmware
BASENAME=firmware_management
CLASSNAME=FirmwareMgt
SAL_FUNCTION=py
SAL_IMPORT_FILE=python.firmware
METHODLIST=list,create

URI=v1/management/configuration
BASENAME=config_management
CLASSNAME=ConfigMgt
SAL_FUNCTION=py
METHODLIST=list,create

URI=v1/statistics
BASENAME=if_statistics
CLASSNAME=IfStatistics
SAL_FUNCTION=puci
METHODLIST=list,retrieve

URI=v1/virtualization/images
BASENAME=docker_images
CLASSNAME=DockerImages
SAL_FUNCTION=py
SAL_IMPORT_FILE=python.docker_api
METHODLIST=list,create,detail_create

URI=v1/virtualization/containers-creation
BASENAME=container_creation
CLASSNAME=ContainerCreation
SAL_FUNCTION=py
METHODLIST=create,detail_create

URI=v1/virtualization/containers
BASENAME=container_get
CLASSNAME=ContainerGet
SAL_FUNCTION=py
METHODLIST=list,retrieve

URI=v1/virtualization/containers-management
BASENAME=container_management
CLASSNAME=ContainerManagement
SAL_FUNCTION=py
METHODLIST=create,detail_create




#
# Field efinitions
#

DEFINE_FIELD_system_config_logging= {
    'loggingBufferSize'     : CONFIG_TYPE_SCALAR : 'system.@system[0].log_size'
    'loggingServerIpAddr'   : CONFIG_TYPE_SCALAR : 'system.@system[0].log_ip'
    'loggingServerPort'     : CONFIG_TYPE_SCALAR : 'system.@system[0].log_port'
    'loggingServerProtocol' : CONFIG_TYPE_SCALAR : 'system.@system[0].log_proto'
    'loggingFilename'       : CONFIG_TYPE_SCALAR : 'system.@system[0].log_file'
    'loggingOutputLevel'    : CONFIG_TYPE_SCALAR : ''
    'loggingCronLogLevel'   : CONFIG_TYPE_SCALAR : ''
};

DEFINE_FIELD_system_config_ntp= {
    'enableNtpClient'       : CONFIG_TYPE_SCALAR : 'system.ntp.enabled'
    'provideNtpServer'      : CONFIG_TYPE_SCALAR : 'system.ntp.enable_server'
    'ntpServerCandidates'   : CONFIG_TYPE_LIST   : 'system.ntp.server'
};

# args[0] is ifname(logical ifname)
DEFINE_FIELD_ARGS_interface_config= {
  'portName'            : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'ifname'])
	'protocol'            : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'proto'])
	'type'                : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'type'])
	'stp'                 : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'stp'])
	'igmpSnooping'        : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'igmp_snooping'])
	'macAddr'             : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'macaddr'])
	'mtu'                 : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'mtu'])
	'ipv6Enable'          : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'ipv6'])
};

# args[0] is ifname
DEFINE_FIELD_ARGS_interface_v4addr_config= {
	'ipv4Address'         : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'ipaddr'])
	'ipv4Netmask'         : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'netmask'])
	'ipv4Gateway'         : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'gateway'])
	'ipv4Broadcast'       : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'broadcast'])
	'dnsServer'           : CONFIG_TYPE_LIST   : ".".join(['network', args[0], 'dns'])
};

DEFINE_FIELD_vlan_common_config= {
    'enableVlan'       : CONFIG_TYPE_SCALAR : 'network.@switch[0].enable_vlan'
};

# if 'VLAN 1', uci show network.@switch_vlan[1]  (args[0] : switch_vlan[1])
DEFINE_FIELD_ARGS_vlan_config= {
    'vlanId'           : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'vlan'])
    'ports'            : CONFIG_TYPE_SCALAR : ".".join(['network', args[0], 'ports'])
};

DEFINE_FIELD_dhcp_common= {
    'domainRequired'           : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].domainneeded'
    'authoritative'            : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].authoritative'
    'localServer'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].local'
    'localDomain'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].domain'
    'logQueries'               : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].logqueries'
    'dnsForwardings'           : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].server'
    'rebindProtection'         : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].rebind_protection'
    'rebindLocalhost'          : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].rebind_localhost'
    'rebindDomain'             : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].rebind_domain'
    'localServiceOnly'         : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].localservice'
    'nonWildcard'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].nonwildcard'
    'listenInterfaces'         : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].interface'
    'excludeInterfaces'        : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].notinterface'
    'readEthers'               : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].readethers'
    'leaseFile'                : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].leasefile'
    'ignoreResolveFile'        : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].noresolv'
    'resolveFile'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].resolvfile'
    'ignoreHosts'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].nohosts'
    'addHostFiles'             : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].addnhosts'
    'suppressLogging'          : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].quietdhcp'
    'allocIpSequential'        : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].sequential_ip'
    'filterPrivate'            : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].boguspriv'
    'filterUseless'            : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].filterwin2k'
    'localiseQueries'          : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].localise_queries'
    'expandHosts'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].expandhosts'
    'addServerFile'            : CONFIG_TYPE_SCALAR : ''
    'strictOrder'              : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].strictorder'
    'bogusNXDomain'            : CONFIG_TYPE_LIST   : 'dhcp.@dnsmasq[0].bogusnxdomain'
    'dnsServerPort'            : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].port'
    'dnsQueryPort'             : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].queryport'
    'dhcpLeaseMax'             : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].dhcpleasemax'
    'dnsPacketSizeMax'         : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].ednspacket_max'
    'dnsForwardMax'            : CONFIG_TYPE_SCALAR : 'dhcp.@dnsmasq[0].dnsforwardmax'
};

# args[0] is ifname
DEFINE_FIELD_ARGS_dhcp_interface_pool= {
    'ignore'                  : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ignore'])
    'addrStart'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'start'])
    'addrLimit'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'limit'])
    'leaseTime'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'leasetime'])
    'dynamicDhcp'             : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'dynamicdhcp'])
    'force'                   : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'force'])
    'v4Netmask'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'netmask'])
    'dhcpOptions'             : CONFIG_TYPE_LIST   : ".".join(['dhcp', args[0], 'dhcp_option'])
};

# args[0] is ifname
DEFINE_FIELD_ARGS_dhcp_interface_v6pool= {
    'ra'                      : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ra'])
    'dhcpv6'                  : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'dhcpv6'])
    'ndp'                     : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ndp'])
    'dhcpv6Mode'              : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ra_management'])
    'raDefault'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ra_default'])
    'dnsServer'               : CONFIG_TYPE_LIST   : ".".join(['dhcp', args[0], 'dns'])
    'dnsDomain'               : CONFIG_TYPE_LIST   : ".".join(['dhcp', args[0], 'domain'])
};

# args[0] is 'name'
DEFINE_FIELD_ARGS_dhcp_static_leases={
    'name'                    : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'name'])
    'dns'                     : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'dns'])
    'mac'                     : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'mac'])
    'ipv4Addr'                : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'ip'])
    'leasetime'               : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'leasetime'])
    'ipv6Suffix'              : CONFIG_TYPE_SCALAR : ".".join(['dhcp', args[0], 'hostid'])
};

DEFINE_FIELD_ARGS_snmp_community_config={
    'community'                : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'community'])
    'communityType'            : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'secname'])
    'source'                   : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'source'])

    'v1GroupName'              : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v1", 'group'])
    'v1Version'                : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v1", 'version'])
    'v1Secname'                : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v1", 'secname'])

    'v2GroupName'             : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v2c", 'group'])
    'v2Version'               : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v2c", 'version'])
    'v2Secname'               : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_v2c", 'secname'])

    'usmGroupName'             : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_usm", 'group'])
    'usmVersion'               : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_usm", 'version'])
    'usmSecname'               : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_usm", 'secname'])

    'access'                  : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access"])
    'accessGroup'             : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'group'])
    'context'                 : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'context'])
    'version'                 : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'version'])
    'level'                   : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'level'])
    'prefix'                  : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'prefix'])
    'read'                    : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'read'])
    'write'                   : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'write'])
    'notify'                  : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0] + "_access", 'notify'])
};

DEFINE_FIELD_ARGS_snmp_traphost_config={
    'trapHost'                 : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'HostName'])
    'trapVersion'              : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'Type'])
    'trapCommunity'            : CONFIG_TYPE_SCALAR : ".".join(['snmpd', args[0], 'Community'])
};
