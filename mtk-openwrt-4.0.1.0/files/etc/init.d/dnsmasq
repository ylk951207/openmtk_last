#!/bin/sh /etc/rc.common

CONTAINER_NAME=dnsmasq
ARGS="53 67"

START=93
STOP=53

WAIT_TIME=30


run_dockerd()
{
	pidof dockerd
}


depend()
{
	after dockerd
}


start()
{
	echo "$CONTAINER_NAME container auot-start at system boot"
	con=""
	Ver=""
	loop=0
	version=""
	image_detect=0
	container_detect=0
	run_dockerd

	while [[ $? -ne 0 || $loop -lt 5 ]] && [[ $loop -lt $WAIT_TIME ]]; do
		sleep 1
		let "loop++"
		echo "loop is $loop"
		run_dockerd
	done

	if [[ $loop -lt $WAIT_TIME ]]; then
		echo "dockerd is running. Now start $CONTAINER_NAME container"
		# Check docker image
		isRemoteRepo=`docker images | awk '$1 ~ /\/'$CONTAINER_NAME'/ {print $1}'`

		if [[ -z "$isRemoteRepo" ]]; then
			repo=""
		else
			repo=$(dirname "${isRemoteRepo}")
			Ver=`docker images | awk '$1 ~ /\/'$CONTAINER_NAME'/ {print $2}'`
		fi

		tags=`docker images | awk '$1 ~ /'$CONTAINER_NAME'/ {print $2}'`
		sorted_tags=$(echo "$tags"|tr " " "\n"|sort|tr "\n" " ")

		for version in $sorted_tags; do
			echo "$version"
			let image_detect++
		done

		if [[ $image_detect -gt 1 ]]; then
			version=`echo $sorted_tags | awk -v ver="default" '{if($NF == ver) print $(NF-1)}'`
		fi
		echo "tags is $sorted_tags, image_detect is $image_detect, version is $version"

		# Check docker container
		container=`docker ps -a | awk '$NF ~ /'$CONTAINER_NAME'/ { print $NF }'`
		sorted_container=$(echo "$container"|tr " " "\n"|sort|uniq|tr "\n" " ")

		for con in $sorted_container; do
			echo "$con"
			let container_detect++
		done
		echo "container is $sorted_container, con is $con, container_detect is $container_detect"

		if [[ $image_detect -lt 1 ]]; then
			echo "Not detect $CONTAINER_NAME container image"
			echo "Make $CONTAINER_NAME container image"
			cd /root/makeContainer/$CONTAINER_NAME;./build-default.sh
			sleep 1
			run_$CONTAINER_NAME.sh "default" "$ARGS"
			exit 0
		else
			if [[ $container_detect -lt 1 ]]; then
				if [[ -z "$repo" ]]; then
					run_$CONTAINER_NAME.sh $version "$ARGS"
				else
					run_$CONTAINER_NAME.sh $Ver "$ARGS" $repo
				fi
				exit 0
			else
				echo "Container($CONTAINER_NAME) exist. Just $con start."
				docker start $con
				exit 0
			fi
		fi
	else
		echo "dockerd is not running"
		exit 1
	fi
}


stop()
{
	container=`docker ps -a | awk '$NF ~ /'$CONTAINER_NAME'/ {print $NF}'`

	for con in $container; do
		echo "$con container stop"
		#docker rm -f $con
	done
	exit 0
}

